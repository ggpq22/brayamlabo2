<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregarUsuarios.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1A6Pruc6DbgAAAAASUVORK5CYII=
</value>
  </data>
</root>